# This builds the macOS version of the project. It uses the same Go version as the Linux build, but it uses a different runner and different steps

name: Build macOS

on:
  push:
    branches: ["main", "unstable"]
  pull_request:
    branches: ["main", "unstable"]

  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest

    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20"

        #   first run go  go get -u github.com/quic-go/quic-go then run go mod tidy
      - name: Get dependencies
        run: go get -u github.com/quic-go/quic-go && go mod tidy

        # run make install to get required dependencies
      - name: Install dependencies
        run: make install

        # run make build to build the project
      - name: Build
        run: make build_darwin

        # run the binary to view version
      - name: Run
        run: ./bin/ssv-dkg -v

        # save the binary as an artifact
      - name: Archive
        uses: actions/upload-artifact@v4
        with:
          name: ssv-dkg
          path: bin/ssv-dkg

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: ssv-dkg

      - name: List all files in directory
        run: ls -a

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            bin/ssv-dkg
          tag_name: v2.1.0
          release_name: Release v2.1.0 - macOS
          body: |
            Changes in this Release:
            - Added support for macOS
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bin/ssv-dkg
          asset_name: ssv-dkg
          asset_content_type: application/octet-stream
