# This builds the Windows version of the project. It uses the same Go version as the Linux build, but it uses a different runner and different steps

name: Build Windows

on:
  push:
    branches: ["main", "unstable"]
  pull_request:
    branches: ["main", "unstable"]

  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22"

        # install bls and mcl using homebrew

        #   first run go  go get -u github.com/quic-go/quic-go then run go mod tidy
      - name: Get dependencies
        run: go get -u github.com/quic-go/quic-go && go get -u github.com/herumi/bls-eth-go-binary && go mod tidy

        # run make install to get required dependencies
      - name: Install dependencies
        run: make install

        # run make build to build the project
      - name: Build
        run: |
          CGO_ENABLED=1 GOOS=windows GOARCH=amd64 go build -o $(BINARY_NAME).exe -ldflags "-X main.Version=`git describe --tags $$(git rev-list --tags --max-count=1)`" ./cmd/ssv-dkg/ssv-dkg.go

      - name: List all files in directory
        run: |
          ls -a
          ls -a bin

        # run the binary to view version
      - name: Run
        run: ./bin/ssv-dkg.exe --help

        # save the binary as an artifact
      - name: Archive
        uses: actions/upload-artifact@v4
        with:
          name: ssv-dkg
          path: bin/ssv-dkg.exe
