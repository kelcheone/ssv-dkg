# This builds the Windows version of the project. It uses the same Go version as the Linux build, but it uses a different runner and different steps

name: Build Windows

on:
  push:
    branches: ["main", "unstable"]
  pull_request:
    branches: ["main", "unstable"]

  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22"

      - name: Get dependencies
        run: |
          go get -u github.com/quic-go/quic-go
          go mod tidy
      - name: Set environment variables
        run: |
          $env:BINARY_NAME="./bin/ssv-dkg-windows"
          $env:CGO_ENABLED=1
          $env:GOOS="windows"
          $env:GOARCH="amd64"

      - name: Debug Directory
        run: |
          ls -R ./cmd/ssv-dkg

      - name: Build project
        run: |
          go build -o $env:BINARY_NAME.exe ./cmd/ssv-dkg
        shell: pwsh

      - name: List all files in directory
        run: |
          ls -a
          ls -a bin

      - name: Run
        run: |
          .\bin\ssv-dkg-windows.exe version
          mkdir -p initiator_logs
        #   make dkg_initiator_windows
